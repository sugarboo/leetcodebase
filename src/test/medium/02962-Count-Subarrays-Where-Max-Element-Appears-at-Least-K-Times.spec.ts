import { describe, expect, it } from 'vitest'
import { countSubarrays } from '../../code/medium/02962-Count-Subarrays-Where-Max-Element-Appears-at-Least-K-Times'

describe('count subarrays where max element appears at least k times test case ðŸ¥‡', () => {
  it('should return the expected result', async () => {
    const nums = [1, 3, 2, 3, 3]
    const k = 2
    const result = countSubarrays(nums, k)
    const expected = 6
    expect(result).toBe(expected)
  })
})

describe('count subarrays where max element appears at least k times test case ðŸ¥ˆ', () => {
  it('should return the expected result', async () => {
    const nums = [1, 4, 2, 1]
    const k = 3
    const result = countSubarrays(nums, k)
    const expected = 0
    expect(result).toBe(expected)
  })
})

describe('count subarrays where max element appears at least k times test case ðŸ¥‰', () => {
  it('should return the expected result', async () => {
    const nums = [912, 822, 60, 155, 888, 204, 912, 74, 676, 912, 684, 116, 313, 82, 197, 912, 674, 858, 810, 508, 24, 414, 691, 912, 632, 135, 333, 912, 912, 912, 912, 304, 900, 25, 112, 912, 484, 912, 536, 463, 620, 83, 80, 421, 912, 115, 785, 500, 912, 598, 247, 847, 912, 203, 253, 343, 637, 912, 599, 442, 757, 24, 912, 659, 323, 412, 860, 453, 726, 912, 839, 820, 634, 87, 733, 420, 737, 912, 912, 912, 912, 894, 912, 165, 823, 912, 912, 901, 474, 912, 912, 885, 527, 663, 239, 874, 912, 912, 317, 66, 119, 656, 167, 339, 293, 912, 912, 810, 912, 802, 534, 912, 304, 614, 4, 206, 44, 407, 781, 97, 912, 302, 113, 29, 309, 119, 912, 476, 912, 912, 189, 296, 912, 456, 375, 832, 185, 650, 912, 868, 649, 128, 40, 821, 214, 721, 912, 522, 697, 912, 373, 900, 448, 912, 428, 292, 12, 912, 303, 263, 886, 607, 396, 861, 365, 252, 912, 912, 699, 221, 912, 912, 263, 912, 289, 640, 912, 840, 912, 912, 165, 912, 133, 110, 445, 809, 29, 480, 212, 756, 912, 912, 641, 831, 51, 496, 446, 694, 596, 912, 834, 511, 912, 912, 475, 601, 617, 907, 471, 611, 163, 224, 431, 912, 466, 912, 554, 551, 309, 912, 590, 501, 216, 808, 663, 206, 912, 755, 569, 578, 912, 907, 103, 542, 322, 865, 912, 509, 702, 912, 838, 703, 253, 912, 912, 494, 912, 414, 417, 244, 227, 46, 912, 758, 808, 445, 222, 912, 912, 912, 12, 912, 776, 378, 40, 678, 70, 912, 262, 454, 40, 912, 653, 912, 592, 354, 234, 912, 624, 912, 94, 200, 25, 912, 912, 398, 912, 89, 296, 338, 847, 38, 55, 839, 824, 320, 785, 362, 912, 912, 217, 562, 184, 912, 539, 346, 616, 216, 912, 95, 694, 870, 508, 912, 770, 912, 912, 694, 912, 912, 484, 389, 268, 908, 45, 615, 754, 912, 912, 186, 553, 283, 797, 353, 199, 435, 64, 419, 505, 366, 497, 773, 912, 912, 912, 37, 191, 912, 865, 912, 128, 98, 887, 700, 424, 648, 14, 644, 264, 168, 873, 912, 322, 103, 811, 217, 912, 551, 912, 25, 98, 912, 851, 912, 100, 342, 891, 912, 609, 650, 912, 912, 912, 310, 374, 390, 272, 694, 912, 159, 836, 686, 71, 382, 303, 912, 252, 444, 912, 338, 912, 863, 667, 37, 786, 840, 13, 418, 307, 429, 48, 912, 270, 401, 766, 246, 236, 91, 448, 800, 379, 155, 704, 906, 832, 912, 881, 305, 760, 338, 393, 287, 912, 795, 695, 453, 912, 134, 912, 575, 296, 192, 698, 912, 654, 912, 400, 602, 899, 912, 419, 690, 912, 912, 775, 912, 912, 683, 518, 593, 460, 630, 912, 912, 581, 588, 744, 433, 139, 360, 912, 569, 501, 516, 757, 718, 752, 794, 103, 912, 114, 467, 250, 441, 584, 137, 912, 747, 46, 912, 691, 677, 912, 101, 136, 912, 912, 28, 681, 437, 815, 912, 295, 780, 48, 510, 114, 40, 541, 765, 13, 460, 656, 912, 101, 450, 104, 317, 458, 482, 485, 909, 912, 867, 46, 912, 249, 821, 860, 912, 781, 701, 606, 331, 912, 463, 829, 334, 694, 912, 829, 542, 827, 271, 912, 197, 524, 748, 893, 558, 573, 912, 501, 64, 55, 569, 801, 184, 856, 543, 244, 912, 549, 839, 912, 93, 124, 912, 176, 686, 604, 109, 365, 380, 912, 511, 839, 428, 598, 384, 432, 364, 133, 600, 142, 912, 295, 12, 383, 524, 829, 912, 912, 629, 166, 137, 466, 199, 457, 912, 912, 568, 852, 576, 456, 118, 29, 411, 659, 912, 912, 455, 912, 593, 828, 207, 526, 912, 886, 912, 912, 549, 436, 116, 20, 912, 912, 912, 804, 912, 490, 340, 912, 912, 442, 606, 856, 128, 648, 44, 763, 775, 912, 773, 28, 886, 912, 912, 400, 784, 54, 629, 868, 912, 912, 912, 251, 838, 912, 134, 135, 613, 260, 912, 311, 691, 865, 912, 93, 912, 612, 646, 763, 842, 912, 912, 912, 673, 182, 161, 531, 143, 799, 912, 912, 749, 912, 492, 912, 364, 321, 108, 856, 163, 912, 737, 253, 347, 851, 4, 550, 714, 213, 912, 168, 912, 61, 153, 912, 847, 168, 348, 440, 693, 284, 853, 784, 70, 850, 467, 404, 568, 221, 878, 912, 912, 156, 912, 171, 545, 147, 912, 912, 214, 220, 912, 895, 163, 912, 912, 912, 912, 722, 912, 912, 726, 912, 681, 870, 836, 286, 912, 855, 912, 254, 912, 459, 912, 775, 568, 66, 47, 472, 271, 912, 750, 203, 534, 702, 912, 912, 282, 762, 912, 482, 707, 771, 912, 912, 912, 827, 281, 912, 42, 477, 257, 912, 588, 556, 912, 687, 912, 622, 327, 851, 350, 29, 906, 735, 704, 912, 562, 274, 446, 746, 660, 316, 411, 88, 431, 120, 836]
    const k = 155
    const result = countSubarrays(nums, k)
    const expected = 20251
    expect(result).toBe(expected)
  })
})
